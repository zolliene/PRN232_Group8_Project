@page
@using Microsoft.IdentityModel.Tokens
@model FE_RazorPage.Pages.Doctor.LabExamination
@{
    ViewData["Title"] = "Khám lâm sàng & Chọn xét nghiệm";
    var patient = Model.PatientDetail;
    var testTypes = Model.TestTypes;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }
    .breadcrumb-nav {
        color: #1565c0;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .breadcrumb-nav a {
        color: #1565c0;
        text-decoration: none;
        transition: color 0.3s;
    }
    .breadcrumb-nav a:hover {
        color: #0d47a1;
    }
    .back-btn {
        background-color: #42a5f5;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 25px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
        margin: 0 10px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }
    .back-btn:hover {
        background-color: #1e88e5;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        color: white;
    }
    .patient-summary {
        background: linear-gradient(135deg, #42a5f5, #1e88e5);
        color: white;
        padding: 20px;
        border-radius: 15px;
        margin-bottom: 30px;
        display: flex;
        align-items: center;
        gap: 20px;
    }
    .patient-avatar-small {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        font-weight: bold;
        border: 3px solid rgba(255, 255, 255, 0.3);
        flex-shrink: 0;
    }
    .patient-info-summary {
        flex: 1;
    }
    .patient-name-summary {
        font-size: 1.3rem;
        font-weight: bold;
        margin-bottom: 5px;
    }
    .patient-details-summary {
        opacity: 0.9;
        font-size: 0.95rem;
    }
    .examination-section {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-bottom: 20px;
    }
    .section-header {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 20px;
        text-align: center;
    }
    .section-header.lab-test {
        background: linear-gradient(135deg, #fd7e14, #ffc107);
    }
    .section-title {
        font-size: 1.4rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    .section-body {
        padding: 25px;
    }
    .form-group {
        margin-bottom: 20px;
    }
    .form-label {
        display: block;
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        font-size: 1.1rem;
    }
    .form-control {
        width: 100%;
        padding: 12px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 1rem;
        transition: border-color 0.3s;
        font-family: inherit;
        resize: vertical;
        box-sizing: border-box;
    }
    .form-control:focus {
        outline: none;
        border-color: #28a745;
        box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1);
    }
    .form-control.is-invalid {
        border-color: #dc3545;
    }
    .invalid-feedback {
        display: block;
        width: 100%;
        margin-top: 5px;
        font-size: 0.875rem;
        color: #dc3545;
    }
    .clinical-textarea {
        min-height: 150px;
        max-height: 300px;
    }
    .submit-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 25px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
        font-size: 1rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        width: 100%;
        justify-content: center;
    }
    .submit-btn:hover {
        background-color: #218838;
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    }
    .test-types-list {
        max-height: 400px;
        overflow-y: auto;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 15px;
    }
    .test-type-item {
        display: flex;
        align-items: flex-start;
        gap: 12px;
        padding: 15px;
        border-bottom: 1px solid #f1f3f4;
        transition: background-color 0.2s;
        cursor: pointer;
        border-radius: 8px;
        margin-bottom: 5px;
    }
    .test-type-item:last-child {
        border-bottom: none;
    }
    .test-type-item:hover {
        background-color: #f8f9fa;
    }
    .test-type-item.selected {
        background-color: #e3f2fd;
        border: 1px solid #1565c0;
    }
    .test-checkbox {
        width: 18px;
        height: 18px;
        margin-top: 2px;
        cursor: pointer;
        transform: scale(1.2);
    }
    .test-info {
        flex: 1;
    }
    .test-name {
        font-weight: 600;
        color: #333;
        margin-bottom: 5px;
        font-size: 1rem;
        cursor: pointer;
    }
    .test-details {
        font-size: 0.9rem;
        color: #666;
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }
    .test-detail-item {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    .test-detail-item i {
        color: #fd7e14;
        font-size: 0.85rem;
    }
    .alert {
        padding: 12px 16px;
        border-radius: 8px;
        margin-bottom: 20px;
        border: 1px solid transparent;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    .alert-success {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
    }
    .alert-danger {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
    }
    .selected-tests-info {
        background-color: #e3f2fd;
        border: 1px solid #bbdefb;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
    }
    .selected-count {
        font-weight: 600;
        color: #1565c0;
    }
    .validation-summary {
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        color: #721c24;
    }
    .validation-summary ul {
        margin: 0;
        padding-left: 20px;
    }
    .validation-summary li {
        margin: 5px 0;
    }
    .no-test-selected {
        background-color: #fff3cd;
        border: 1px solid #ffeaa7;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        color: #856404;
    }
    .selection-actions {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }
    .selection-btn {
        padding: 8px 16px;
        border: 1px solid #dee2e6;
        border-radius: 20px;
        background-color: #f8f9fa;
        color: #495057;
        cursor: pointer;
        font-size: 0.9rem;
        transition: all 0.3s;
    }
    .selection-btn:hover {
        background-color: #e9ecef;
        border-color: #adb5bd;
    }
    .selection-btn.select-all {
        background-color: #28a745;
        color: white;
        border-color: #28a745;
    }
    .selection-btn.select-all:hover {
        background-color: #218838;
    }
    .selection-btn.clear-all {
        background-color: #dc3545;
        color: white;
        border-color: #dc3545;
    }
    .selection-btn.clear-all:hover {
        background-color: #c82333;
    }
</style>
<div class="container">
    <div class="page-header">
        <div class="breadcrumb-nav">
            <a asp-page="/Doctor/PatientList">
                <i class="fas fa-list"></i> Danh sách bệnh nhân
            </a>
            <span>></span>
            <a asp-page="/Doctor/PatientDetails" asp-route-appointmentId="@patient.AppointmentId">
                <i class="fas fa-user"></i> Chi tiết bệnh nhân
            </a>
            <span>></span>
            <span>Khám lâm sàng</span>
        </div>
        <a asp-page="/Doctor/PatientDetails" asp-route-appointmentId="@patient.AppointmentId" class="back-btn">
            <i class="fas fa-arrow-left"></i>
            Quay lại
        </a>
    </div>
    @if (patient != null)
    {
        <!-- Patient Summary -->
        <div class="patient-summary">
            <div class="patient-avatar-small">
                @patient.Name.Split(' ').Last().Substring(0, 1).ToUpper()
            </div>
            <div class="patient-info-summary">
                <div class="patient-name-summary">@patient.Name</div>
                <div class="patient-details-summary">
                    ID: @patient.InsuranceNumber | @patient.Phone | @patient.Dob.ToString("dd/MM/yyyy") | @(patient.Gender == "male" ? "Nam" : "Nữ")
                </div>
            </div>
        </div>
        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
            </div>
        }
        <!-- Combined Form -->
        <form method="post" asp-page-handler="CreateLabTest">
            <input type="hidden" asp-for="AppointmentId"/>
            <!-- Clinical Examination Section -->
            <div class="examination-section">
                <div class="section-header">
                    <h2 class="section-title">
                        <i class="fas fa-stethoscope"></i>
                        Khám lâm sàng
                    </h2>
                </div>
                <div class="section-body">
                    <div class="form-group">
                        <label class="form-label" asp-for="ClinicalData">
                            <i class="fas fa-notes-medical"></i> Kết quả khám lâm sàng
                        </label>
                        <textarea 
                            asp-for="ClinicalData"
                            class="form-control clinical-textarea" 
                            placeholder="Nhập kết quả khám lâm sàng của bệnh nhân..."
                            rows="6"></textarea>
                        <span asp-validation-for="ClinicalData" class="invalid-feedback"></span>
                    </div>
                </div>
            </div>
            <!-- Lab Test Selection Section -->
            <div class="examination-section">
                <div class="section-header lab-test">
                    <h2 class="section-title">
                        <i class="fas fa-flask"></i>
                        Chọn xét nghiệm
                    </h2>
                </div>
                <div class="section-body">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-list-check"></i> Chọn các loại xét nghiệm (có thể chọn nhiều)
                        </label>
                        <!-- Selection Counter -->
                        <div class="selected-tests-info" id="selectedTestsInfo" style="display: none;">
                            <i class="fas fa-info-circle"></i>
                            <span class="selected-count">Đã chọn: <span id="selectedCount">0</span> xét nghiệm</span>
                        </div>
                        @if (!testTypes.IsNullOrEmpty())
                        {
                            <!-- Selection Actions -->
                            <div class="selection-actions">
                                <button type="button" class="selection-btn select-all" onclick="selectAllTests()">
                                    <i class="fas fa-check-double"></i> Chọn tất cả
                                </button>
                                <button type="button" class="selection-btn clear-all" onclick="clearAllTests()">
                                    <i class="fas fa-times"></i> Bỏ chọn tất cả
                                </button>
                            </div>
                            <div class="test-types-list">
                                @for (int i = 0; i < testTypes.Count; i++)
                                {
                                    var testType = testTypes[i];
                                    var isChecked = Model.SelectedTestTypeIds != null && Model.SelectedTestTypeIds.Contains(testType.Id);
                                    <div class="test-type-item @(isChecked ? "selected" : "")" onclick="toggleTestSelection(@testType.Id)">
                                        <input type="checkbox"
                                               class="test-checkbox"
                                               name="SelectedTestTypeIds"
                                               value="@testType.Id"
                                               id="test_@testType.Id"
                                               checked="@isChecked"
                                               onchange="updateSelectionUI()"/>
                                        <div class="test-info">
                                            <label class="test-name" for="test_@testType.Id">
                                                @testType.Name
                                            </label>
                                            <div class="test-details">
                                                @if (!string.IsNullOrEmpty(testType.Code))
                                                {
                                                    <div class="test-detail-item">
                                                        <i class="fas fa-code"></i>
                                                        <span>Mã: @testType.Code</span>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(testType.Unit))
                                                {
                                                    <div class="test-detail-item">
                                                        <i class="fas fa-ruler"></i>
                                                        <span>Đơn vị: @testType.Unit</span>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(testType.ReferenceRange))
                                                {
                                                    <div class="test-detail-item">
                                                        <i class="fas fa-chart-line"></i>
                                                        <span>Ngưỡng tham chiếu: @testType.ReferenceRange</span>
                                                    </div>
                                                }
                                                @if (!string.IsNullOrEmpty(testType.Description))
                                                {
                                                    <div class="test-detail-item">
                                                        <i class="fas fa-info"></i>
                                                        <span>@testType.Description</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-flask"></i>
                                <h4>Không có xét nghiệm khả dụng</h4>
                                <p>Hiện tại không có loại xét nghiệm nào được kích hoạt.</p>
                            </div>
                        }
                        <span asp-validation-for="SelectedTestTypeIds" class="invalid-feedback"></span>
                    </div>
                </div>
            </div>
            <!-- Submit Button -->
            <div class="examination-section">
                <div class="section-body">
                    <button type="submit" class="submit-btn">
                        <i class="fas fa-save"></i>
                        Lưu khám & Tạo đơn xét nghiệm
                    </button>
                </div>
            </div>
        </form>
    }
    else
    {
        <div class="examination-section">
            <div class="empty-state" style="text-align: center; padding: 60px 20px; color: #666;">
                <i class="fas fa-user-times" style="font-size: 4rem; margin-bottom: 20px; color: #ccc;"></i>
                <h3>Không tìm thấy thông tin bệnh nhân</h3>
                <p>Vui lòng kiểm tra lại thông tin hoặc quay lại danh sách bệnh nhân.</p>
                <a asp-page="/Doctor/PatientList" class="back-btn">
                    <i class="fas fa-arrow-left"></i>
                    Quay lại danh sách
                </a>
            </div>
        </div>
    }
</div>
<script>
    // JavaScript functions for multiple selection
    document.addEventListener('DOMContentLoaded', function() {
        updateSelectionUI();
    });
    
    function toggleTestSelection(testId) {
        const checkbox = document.getElementById('test_' + testId);
        const testItem = checkbox.closest('.test-type-item');
        
        // Toggle checkbox
        checkbox.checked = !checkbox.checked;
        
        // Update UI
        if (checkbox.checked) {
            testItem.classList.add('selected');
        } else {
            testItem.classList.remove('selected');
        }
        
        updateSelectionUI();
    }
    
    function updateSelectionUI() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="SelectedTestTypeIds"]');
        const selectedCount = document.querySelectorAll('input[type="checkbox"][name="SelectedTestTypeIds"]:checked').length;
        const selectedCountElement = document.getElementById('selectedCount');
        const selectedTestsInfo = document.getElementById('selectedTestsInfo');
        
        // Update counter
        if (selectedCountElement) {
            selectedCountElement.textContent = selectedCount;
        }
        
        // Show/hide selection info
        if (selectedTestsInfo) {
            selectedTestsInfo.style.display = selectedCount > 0 ? 'block' : 'none';
        }
        
        // Update visual state for all items
        checkboxes.forEach(checkbox => {
            const testItem = checkbox.closest('.test-type-item');
            if (checkbox.checked) {
                testItem.classList.add('selected');
            } else {
                testItem.classList.remove('selected');
            }
        });
    }
    
    function selectAllTests() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="SelectedTestTypeIds"]');
        checkboxes.forEach(checkbox => {
            checkbox.checked = true;
        });
        updateSelectionUI();
    }
    
    function clearAllTests() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"][name="SelectedTestTypeIds"]');
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
        updateSelectionUI();
    }
</script>